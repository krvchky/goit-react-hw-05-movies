{"version":3,"file":"static/js/115.d437d381.chunk.js","mappings":"oPA2DA,UApDA,WACE,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAS,mCAAG,WAAMC,GAAN,uFAEdP,GAAa,GAFC,UAGeQ,EAAAA,EAAAA,IAAQD,GAHvB,OAGRE,EAHQ,OAIdX,EAAaW,GAJC,gDAMdP,EAAS,KAAIQ,SANC,yBAQdV,GAAa,GARC,4EAAH,sDAWfM,EAAUH,EAZU,CAarB,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACM,OAAVJ,GACJU,EAAAA,OAAAA,QAAA,gCAAwCV,GACzC,GAAE,CAACA,KAGF,gCACGF,IAAa,SAAC,IAAD,KACd,wBACGa,MAAMC,QAAQhB,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAWiB,KAAI,YAAiC,IAA9BP,EAA6B,EAA7BA,GAAIQ,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC1B,OACE,gBAAIC,MAAO,CAAEC,UAAW,QAAxB,WACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,qEAENI,IAAKL,KAEP,wBAAKA,MATgCR,EAY1C,SAIV,C","sources":["pages/Cast/Cast.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Notify } from 'notiflix';\nimport { Loader } from '../../components/Loader/Loader';\nimport { apiCast } from '../../services/Api';\n\nfunction Cast() {\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async id => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await apiCast(id);\n        setMovieCast(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`An error has occurred ${error}`);\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {Array.isArray(movieCast) &&\n          movieCast?.map(({ id, name, profile_path }) => {\n            return (\n              <li style={{ listStyle: 'none' }} key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://upload.wikimedia.org/wikipedia/commons/2/2f/No-photo-m.png'\n                  }\n                  alt={name}\n                />\n                <h4>{name}</h4>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n\nexport default Cast;"],"names":["useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchCast","id","apiCast","receivedTrends","message","Notify","Array","isArray","map","name","profile_path","style","listStyle","src","alt"],"sourceRoot":""}