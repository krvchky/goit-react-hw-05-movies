{"version":3,"file":"static/js/757.8563b905.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n`;","import { useState, useEffect, Suspense, lazy } from 'react';\nimport { useParams, Link, Route, Routes, useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { Loader } from '../../components/Loader/Loader';\nimport { getMovieDetails } from '../../services/Api';\nimport { ImArrowLeft } from 'react-icons/im';\nimport { Title } from './MovieDetailsPage.styled';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nfunction MovieDetailsPage() {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieDetails = async id => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await getMovieDetails(id);\n        setMovieInfo(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`An error has occurred ${error}`);\n  }, [error]);\n\n  return (\n    <div>\n      <Link to={location?.state?.from ?? '/'}>\n        <span>\n          <ImArrowLeft size=\"30px\" />\n        </span>\n      </Link>\n      {isLoading && <Loader />}\n      {movieInfo !== null && (\n        <div>\n          <img\n            src={\n              movieInfo?.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieInfo?.poster_path}`\n                : 'https://cdn4.iconfinder.com/data/icons/ui-beast-4/32/Ui-12-512.png'\n            }\n            alt={movieInfo.title}\n          />\n          <div>\n            <h1>\n              {movieInfo.title} ({movieInfo?.release_date.slice(0, 4)})\n            </h1>\n            <p>User Score: {movieInfo?.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movieInfo?.genres?.map(({ id, name }) => {\n                return <li key={id}>{name}</li>;\n              })}\n            </ul>\n          </div>\n        </div>\n      )}\n      <div>\n        <Link\n          style={{ textDecoration: 'none' }}\n          state={{ from: location?.state?.from ?? '/' }}\n          to=\"reviews\"\n        >\n          <Title>Reviews</Title>\n        </Link>\n        <Link\n          style={{ textDecoration: 'none' }}\n          state={{ from: location?.state?.from ?? '/' }}\n          to=\"cast\"\n        >\n          <Title>Cast</Title>\n        </Link>\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst apiServise = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '3181cdf2e58737cb479bdcab3d178467',\n    language: 'en-US',\n  },\n});\n\nexport const trendMovie = async () => {\n  const { data } = await apiServise.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await apiServise.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await apiServise.get(`/movie/${id}`);\n  return data;\n};\n\nexport const apiCast = async id => {\n  const { data } = await apiServise.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const apiReviews = async id => {\n  const { data } = await apiServise.get(`/movie/${id}/reviews`);\n  return data.results;\n};"],"names":["Title","styled","Cast","lazy","Reviews","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","useEffect","fetchMovieDetails","id","getMovieDetails","receivedTrends","message","Notify","to","state","from","size","Loader","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","name","style","textDecoration","Suspense","fallback","path","element","apiServise","axios","baseURL","params","api_key","language","trendMovie","get","data","results","searchMovie","query","apiCast","cast","apiReviews"],"sourceRoot":""}