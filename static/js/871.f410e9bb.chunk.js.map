{"version":3,"file":"static/js/871.f410e9bb.chunk.js","mappings":"oPAsDA,UAhDA,WACE,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,WAAMC,GAAN,uFAEjBP,GAAa,GAFI,UAGYQ,EAAAA,EAAAA,IAAWD,GAHvB,OAGXE,EAHW,OAIjBX,EAAgBW,GAJC,gDAMjBP,EAAS,KAAMQ,SANE,yBAQjBV,GAAa,GARI,4EAAH,sDAWlBM,EAAaH,EAZO,CAarB,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACM,OAAVJ,GACJU,EAAAA,OAAAA,QAAA,gCAAwCV,GACzC,GAAE,CAACA,KAGF,gCACGF,IAAa,SAAC,IAAD,KACd,wBACGa,MAAMC,QAAQhB,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAciB,KAAI,SAAAC,GAChB,OACE,2BACE,+BAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMC,UACX,8BAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,YAFHF,EAAKR,GAKjB,OAEoB,IAAxBV,EAAaqB,SACZ,kEAIP,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Notify } from 'notiflix';\nimport { apiReviews } from '../../services/Api';\nimport { Loader } from '../../components/Loader/Loader';\n\nfunction Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async id => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await apiReviews(id);\n        setMovieReviews(receivedTrends);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`An error has occurred ${error}`);\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {Array.isArray(movieReviews) &&\n          movieReviews?.map(elem => {\n            return (\n              <li key={elem.id}>\n                <h3>{elem?.author}</h3>\n                <p>{elem?.content}</p>\n              </li>\n            );\n          })}\n      </ul>\n      {movieReviews.length === 0 && (\n        <h4>There are no reviews for this movie</h4>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;"],"names":["useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviews","id","apiReviews","receivedTrends","message","Notify","Array","isArray","map","elem","author","content","length"],"sourceRoot":""}